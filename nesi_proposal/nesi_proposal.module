<?php
/**
 * @file
 * Code for the NeSI Proposal feature.
 */

include_once 'nesi_proposal.features.inc';

/**
 * Implements hook_menu().
 */
function nesi_proposal_menu() {
  /* 
  $items['add-proposal'] = array(
    'title' => 'Add Proposal',
    'page callback' => 'nesi_proposal_page',
    'access callback' => TRUE,
  ); */

  $items['admin/config/nesi/proposal'] = array(
    'title' => 'NeSI Proposal Configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nesi_proposal_admin_settings'),
    'access arguments' => array('administer'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nesi_proposal.admin.inc'
  );

  return $items;
}

/**
 * Menu callback.
 */
function nesi_proposal_page() {

  $output = '';

  $output .= '
    <h1 class="title">Proposal Options</h1>
    <p><em>Select the type of proposal you wish to complete:</em></p>
    <div id="proposal-options">
    <p><a href="node/add/proposal-research-class">Research</a></p>
    <p><a href="node/add/proposal-development-class">Proposal Development</a></p>
    <p><a href="node/add/proposal-teaching">Teaching</a></p>
    <p><a href="node/add/proposal-private-industry">Private Industry</a></p>
    <p><a href="node/add/proposal-collaborative">Collaborative</a></p>
    </div>
  ';  

  return $output;

}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function nesi_proposal_form_proposal_development_class_node_form_alter(&$form, &$form_state, $form_id) {
  //dpm('* Implements hook_form_FORM_ID_alter()');
  //dpm($form_state);

  $form['#validate'][] = 'nesi_proposal_validate_proposal_development_class';
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function nesi_proposal_form_proposal_research_class_node_form_alter(&$form, &$form_state, $form_id) {
  //dpm('* Implements hook_form_FORM_ID_alter()');
  //dpm($form_state);

  $form['#validate'][] = 'nesi_proposal_validate_proposal_research_class';
}

/**
 * Validation of REST submission prior to Drupal saving proposal development
 */
function nesi_proposal_validate_proposal_development_class(&$form, &$form_state) {
  //dpm($form_state);  

  // First we need to verify form specific validation  
  if(form_get_errors()) {
    return;
  }  

  $project_data = array();
  $project_map = array();

  // Prep proposal data for REST interface
  //Project ID
  $project_data['projectId'] = 'nesi-'.$form_state['values']['uid'].'-'.$form_state['values']['created'];
  //Project Title
  $project_data['projectTitle'] = $form_state['values']['title'];
  $project_data['principal'] = $form_state['values']['field_pdc_pi_email'][LANGUAGE_NONE][0]['value'];

  //$project_map['type'] = 'proposal_development_class'; 
  //$project_map['prefix'] = 'pdc'; 

  //Project Description
  //PI Name
  //PI Email
  //PI Phone
  //PI Team Members
  $project_data['users'] = _get_proposal_team_members($form_state['values']['field_pdc_team_member_emails']);
  //Details of Project Team Members
  //Project Team's HPC Experience
  //Software Requirements
  //$project_map['software_requirements'] = 'Test Software Req.'; 
  //Storage Requirements
  //$project_map['storage_requirements'] = 'Test Storage Req.'; 
  //Expert Support
  //Further Information

  // Map project data
  //$project_data['projectData'] = $project_map;

  //$project_json = json_encode($project_data);
  //dpm($project_json);

  // Attempt to send proposal to REST interface
  $rest_result = nesi_rest_insert_project($project_data);

  // Check for error or http response
  if ($rest_result <> FALSE) {
    //dpm('Project was created successfully in GOLD.');
    //dpm($rest_result);
    watchdog('nesi_proposal', 'REST project created - ID " '.$project_data['projectId'].' " ', NULL , WATCHDOG_ERROR, $link = NULL);
  }
  else {
    // If http response failure, add to watchdog and notify admin
    watchdog('nesi_proposal', 'REST create project failure - ID " '.$project_data['projectId'].' " ', NULL , WATCHDOG_ERROR, $link = NULL);

    // Need to prepare config so NeSI can manage all end-user response text.
    form_set_error('nesi_proposal','There was a problem saving your proposal information. Try to submit again. if you continue to experience problems, please try again later.');
  }

}

/**
 * Validation of REST submission prior to Drupal saving research proposal
 */
function nesi_proposal_validate_proposal_research_class(&$form, &$form_state) {
  //dpm($form_state);  

  // First we need to verify form specific validation  
  if(form_get_errors()) {
    return;
  }  

  $project_data = array();
  $project_map = array();

  // Prep proposal data for REST interface
  //Project ID
  $project_data['projectId'] = 'nesi-'.$form_state['values']['uid'].'-'.$form_state['values']['created'];
  //Project Title
  $project_data['projectTitle'] = $form_state['values']['title'];
  $project_data['principal'] = $form_state['values']['field_prc_pi_email'][LANGUAGE_NONE][0]['value'];

  //$project_map['type'] = 'proposal_research_class'; 
  //$project_map['prefix'] = 'prc'; 

  //Scientific Goals
  //Benefits from HPC
  //Project Deliverables
  //Profile of usage through Allocation
  //Desired HPC Platform
  //CPU Core Hours
  //Storage Requirements
  //Software Requirements
  //Data transfer
  //PI Name
  //PI Email
  //PI Phone
  //PI Team Members
  $project_data['users'] = _get_proposal_team_members($form_state['values']['field_prc_team_member_emails']);
  //Details of Project Team Members
  //Project Team's HPC Experience
  //Expert Support
  //Explanatory notes for "Expert support" section
  //Funding Provider
  //Funding Amount
  //Further Information

  // Map project data
  //$project_data['projectData'] = $project_map;

  //$project_json = json_encode($project_data);
  //dpm($project_json);

  // Attempt to send proposal to REST interface
  $rest_result = nesi_rest_insert_project($project_data);

  // Check for error or http response
  if ($rest_result <> FALSE) {
    //dpm('Project was created successfully in GOLD.');
    //dpm($rest_result);
    watchdog('nesi_proposal', 'REST project created - ID " '.$project_data['projectId'].' " ', NULL , WATCHDOG_ERROR, $link = NULL);
  }
  else {
    // If http response failure, add to watchdog and notify admin
    watchdog('nesi_proposal', 'REST create project failure - ID " '.$project_data['projectId'].' " ', NULL , WATCHDOG_ERROR, $link = NULL);

    // Need to prepare config so NeSI can manage all end-user response text.
    form_set_error('nesi_proposal','There was a problem saving your proposal information. Try to submit again. if you continue to experience problems, please try again later.');
  }

}

function _get_proposal_team_members($multi_form_field = array()) {

  $member_data = array();
  // Returns emails of team members in a simplified array.
  if ($multi_form_field) {
    foreach ($multi_form_field[LANGUAGE_NONE] as $team_member => $title) {
      // Add to collection
      if (is_array($title)) {
        // verify field is not empty
        if (trim($title['value']) <> '') {
          $member_data[]['userId'] = trim($title['value']);
        }
      }
    }
  }
  //dpm($member_data);
  return $member_data;
}

