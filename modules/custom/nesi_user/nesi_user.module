<?php
/**
 * @file
 * NeSI User module.
 * 
 * The purpose of this module is to provide additional functionality for user registration 
 * and user update events within the NeSI portal. This module communicates with the NeSI
 * REST API to ensure user data is kept up to date within the NeSI account system.
 *
 * @todo Add terms of service
 */

include_once 'nesi_user.features.inc';

/**
 * Implements hook_init()
 */
function nesi_user_init(){
 
  // Implement check to see if user has setup a researcher_profile
  // This check is done for users created automatically by Tuakiri or other external 
  // process where a researcher profile will not have been assigned by default

  global $user;

  if($user->uid && $user->uid != 1){

    $account = user_load($user->uid);
    //$obj = entity_metadata_wrapper('user', $account);
    //dpm($obj->getPropertyInfo());
    $profile = profile2_load_by_user($account->uid);
    //dpm($profile);
    $destination = drupal_get_destination();

    if(empty( $profile['researcher_profile']->pid )){

      if($destination['destination'] != 'user/'.$account->uid.'/edit/researcher_profile' && $destination['destination'] != 'user/logout'){
        drupal_set_message('Researcher profile incomplete.', 'error');
        drupal_set_message('Please ensure that you complete your researcher profile below.', 'error');
        drupal_goto('user/'.$account->uid.'/edit/researcher_profile');
      }
    }
  }
}

/**
 * Implements hook_form_profile2_form_alter()
 */
function nesi_user_form_profile2_form_alter(&$form, &$form_state) {
  //drupal_set_message(print_r($form['profile_researcher_profile']['field_user_nationality'][LANGUAGE_NONE]['#options'], TRUE));  // print array to messages
  //drupal_set_message(print_r($form['profile_researcher_profile'], TRUE));  // print array to messages

  // User Registration form alter
  if ($form['#form_id'] == 'user_register_form') {
    $queue = $form['profile_researcher_profile']['field_user_nationality'][LANGUAGE_NONE]['#options'];

    // Provide New Zealand and Australia as a primary option in nationality field.
    $new_option = new stdClass();
    $new_option->option['Select Nationality'] = array('NZ' => 'New Zealand', 'AU' => 'Australia'); 

    $cur_option = new stdClass();
    $cur_option->option['All Countries'] = $queue; 

    $form['profile_researcher_profile']['field_user_nationality'][LANGUAGE_NONE]['#default_value'] = '_none';
    $form['profile_researcher_profile']['field_user_nationality'][LANGUAGE_NONE]['#options'] = array($new_option, $cur_option);
    //dpm($form['profile_researcher_profile']['field_user_nationality']);
  }

  // User Profile form alter
  if ($form['#form_id'] == 'user_profile_form') {
    
    // Check user
    global $user;
     
    if ($user->uid > 1) {
      // Get user data from GOLD
      $rest_user_id = nesi_user_tuakiri_identifier();
      $rest_result = nesi_rest_get_user($rest_user_id);  
      
      // Check for error or http response
      if ($rest_result) {
        dpm('User was successfully retrieved from GOLD.');
        dpm($rest_result);
        // Display nesi_rest data instead of Drupal data... (GOLD is considered "up to date")
        
        // Convert from json
        $user_data = json_decode($rest_result['json_data']);
        
        if ($user_data) {
          $form['profile_researcher_profile']['field_user_firstname'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->firstName;
          $form['profile_researcher_profile']['field_user_middlename'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->middleName;
          $form['profile_researcher_profile']['field_user_lastname'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->lastName;
          $form['profile_researcher_profile']['field_user_institution'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->institution;
          $form['profile_researcher_profile']['field_user_department'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->department;
          $form['profile_researcher_profile']['field_user_position'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->position;
          $form['profile_researcher_profile']['field_user_phone'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->phone;
          $form['profile_researcher_profile']['field_user_address'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->address;
          $form['profile_researcher_profile']['field_user_altemail'][LANGUAGE_NONE][0]['value']['#default_value'] = $user_data->altEmail;
        }
        else {
          // Problem with return json or conversion. Log and Notify.
          watchdog('nesi_user', 'REST response issue - check json for compliance.', NULL , WATCHDOG_CRITICAL, $link = NULL);
        }
      }
      else {
        // Need to handle this: 
        // Decision has been made to prevent access to account if REST connection fails. (as of 02082012).
        dpm('It appears that there may have been a problem querying the user in GOLD.');

        // If http response failure, add to watchdog and notify admin
      }

      // As we are now sourcing data from tuakiri. Some data must be updated from tuakiri
      if (nesi_user_tuakiri_validate()) {
        $tk_attributes = nesi_user_tuakiri_attributes();
        
        $form['profile_researcher_profile']['field_user_firstname'][LANGUAGE_NONE][0]['value']['#default_value'] = $tk_attributes['givenName'];
        $form['profile_researcher_profile']['field_user_lastname'][LANGUAGE_NONE][0]['value']['#default_value'] = $tk_attributes['sn'];
        $form['profile_researcher_profile']['field_user_institution'][LANGUAGE_NONE][0]['value']['#default_value'] = $tk_attributes['o'];
        $form['profile_researcher_profile']['field_user_altemail'][LANGUAGE_NONE][0]['value']['#default_value'] = $tk_attributes['mail'];

        // Tuakiri attributes should be locked
        $form['profile_researcher_profile']['field_user_firstname'][LANGUAGE_NONE][0]['value']['#attributes']['disabled'] = TRUE;
        $form['profile_researcher_profile']['field_user_lastname'][LANGUAGE_NONE][0]['value']['#attributes']['disabled'] = TRUE;
        $form['profile_researcher_profile']['field_user_institution'][LANGUAGE_NONE][0]['value']['#attributes']['disabled'] = TRUE;
        $form['profile_researcher_profile']['field_user_altemail'][LANGUAGE_NONE][0]['value']['#attributes']['disabled'] = TRUE;
        
      }
      
    } 
  }
}

function nesi_user_form_user_profile_form_alter(&$form, &$form_state) {
  // Prevent tuakiri users from modifying their Drupal account password or email
  // Inspired by userprotect.module (http://drupal.org/project/userprotect)

  if (nesi_user_tuakiri_validate()) {

    $account = $form['#user'];

    if (isset($form['account']['name'])) {
      $form['account']['name']['#disabled'] = TRUE;
      $form['account']['name']['#value'] = $account->name;
    }

    // Disable account email change
    if (isset($form['account']['mail'])) {
      $form['account']['mail']['#disabled'] = TRUE;
      $form['account']['mail']['#value'] = $account->mail;
    }
    
    // Disable password change
    // Password is an exception, as it needs no value, Just unset it, as
    // there's no need to display two empty boxes that are disabled.
    if (isset($form['account']['pass'])) {
      // Core stores pass as a required value in 'current_pass_required_values',
      // and we're removing the form element, so remove the pass value from there
      // too to prevent warnings.
      unset($form['account']['pass'], $form['account']['current_pass'], $form['account']['current_pass_required_values']['#value']['pass']);
    }  
  }
}

/**
 * Implements hook_user_update()
 */
function nesi_user_user_update(&$edit, $account, $category) {

  if ($category == 'researcher_profile') {
    if ($account->uid > 1) {

      $rest_user_id = nesi_user_tuakiri_identifier();

      if ($rest_user_id) {
    
        $user_data = array();
        $user_data['userId'] = $rest_user_id;
        $user_data['email'] = $account->mail;
        $user_data['firstName'] = $edit['profile_researcher_profile']['field_user_firstname'][LANGUAGE_NONE][0]['value'];
        $user_data['middleName'] = $edit['profile_researcher_profile']['field_user_middlename'][LANGUAGE_NONE][0]['value'];
        $user_data['lastName'] = $edit['profile_researcher_profile']['field_user_lastname'][LANGUAGE_NONE][0]['value'];
        $user_data['institution'] = $edit['profile_researcher_profile']['field_user_institution'][LANGUAGE_NONE][0]['value'];
        $user_data['department'] = $edit['profile_researcher_profile']['field_user_department'][LANGUAGE_NONE][0]['value'];
        $user_data['position'] = $edit['profile_researcher_profile']['field_user_position'][LANGUAGE_NONE][0]['value'];
        $user_data['phone'] = $edit['profile_researcher_profile']['field_user_phone'][LANGUAGE_NONE][0]['value'];
        $user_data['address'] = $edit['profile_researcher_profile']['field_user_address'][LANGUAGE_NONE][0]['value'];
        $user_data['altEmail'] = $edit['profile_researcher_profile']['field_user_altemail'][LANGUAGE_NONE][0]['value'];
        $user_data['nationality'] = $edit['profile_researcher_profile']['field_user_nationality'][LANGUAGE_NONE][0]['iso2'];  

        // Attempt to connect to REST and create account
        $rest_result = nesi_rest_update_user($user_data);  

        // Check for error or http response
        if ($rest_result <> FALSE) {
          //dpm('User was updated successfully in GOLD.');
          //dpm($rest_result);
          watchdog('nesi_user', 'REST user updated - UID " '.$user_data['userId'].' " ', NULL , WATCHDOG_INFO, $link = NULL);
        }
        else {
          // If http response failure, add to watchdog and notify admin
          watchdog('nesi_user', 'REST update user failure - UID " '.$user_data['userId'].' " ', NULL , WATCHDOG_ERROR, $link = NULL);

          dpm('It appears that there may have been a problem updating the user in GOLD.');
        }
      }
    }
  }
}

/**
 * Implements hook_user_view()
 */
function nesi_user_user_view($account, $view_mode, $langcode) {

  // Exclude superadmin
  if ($account->uid > 1) {

    // Check user had been created in GOLD
    _gold_user_create($account);

    $profile = profile2_load_by_user($account, 'researcher_profile');

    if (is_object($profile)) {
      $profile_emw = entity_metadata_wrapper('profile2', $profile); 

      // Attempt to connect to REST and retrieve account information
      $rest_user_id = nesi_user_tuakiri_identifier();

      if ($rest_user_id) {
        $rest_result = nesi_rest_get_user($rest_user_id);  
      }

      // Check for error or http response
      if ($rest_result <> FALSE) {
        dpm('User was successfully retrieved from GOLD.');
        dpm($rest_result);
        // Display nesi_rest data instead of Drupal data... (GOLD is considered "up to date")
        
        // Convert from json
        $user_data = json_decode($rest_result['json_data']);
        
        if ($user_data) {
          //dpm($user_data);
          $profile_emw->field_user_firstname->set($user_data->firstName); 
          $profile_emw->field_user_middlename->set($user_data->middleName); 
          $profile_emw->field_user_lastname->set($user_data->lastName); 
          $profile_emw->field_user_institution->set($user_data->institution); 
          $profile_emw->field_user_department->set($user_data->department); 
          $profile_emw->field_user_phone->set($user_data->phone); 
          $profile_emw->field_user_position->set($user_data->position); 
          $profile_emw->field_user_address->set($user_data->address); 
          $profile_emw->field_user_altemail->set($user_data->altEmail); 
         // $profile->field_user_nationality->set('TestN'); 
        }
        else {
          // Problem with return json or conversion. Log and Notify.
          watchdog('nesi_user', 'REST response issue - check json for compliance.', NULL , WATCHDOG_CRITICAL, $link = NULL);
        }
      }
      else {

        // Need to handle this: 
        // Decision has been made to prevent access to account if REST connection fails. (as of 02082012).
        dpm('It appears that there may have been a problem querying the user in GOLD.');

        // If http response failure, add to watchdog and notify admin
      }
    }
  }
}

function nesi_user_username_alter(&$name, $account) {

  if ($account->uid > 1) {
    // Display actual user name rather than generated username
    if (!empty($_SERVER['Shib-Identity-Provider'])) {
      if (!empty($_SERVER['displayName'])) {
        $name = $_SERVER['displayName'];
      }
      else {
        // Tuakiri displayName not set. Curious detail, needs to be logged.
        watchdog('nesi_user', 'Tuakiri displayName is empty - UID " '.$account->uid.' " ', NULL , WATCHDOG_WARNING, $link = NULL);
      }
    }
    else {
      // Attempt to use researcher profile for non Tuakiri users
      $profile = profile2_load_by_user($account, 'researcher_profile');

      if (is_object($profile)) {
        $profile_data = entity_metadata_wrapper('profile2', $profile); 
        $name = $profile_data->field_user_firstname->value().' '.$profile_data->field_user_lastname->value();
      }
    }
  }
}

function nesi_user_tuakiri_identifier() {
  // Returns identifier to be used for userId in REST calls
  global $user;
  $account = $user;

  $identifier = FALSE;

  if ($account->uid > 1) {
    // Check for tuakiri session
    if (nesi_user_tuakiri_validate()) {
      if (!empty($_SERVER['shared-token'])) {
        $identifier = $_SERVER['shared-token'];
      }
      else {
        $identifier = 'tuakiri-test-hash-'.$account->uid;
        // Tuakiri shared-token not set. Curious detail, needs to be logged.
        watchdog('nesi_user', 'Tuakiri shared-token is empty - UID " '.$account->uid.' " ', NULL , WATCHDOG_WARNING, $link = NULL);
      }
    }
    else {
      // It seems this is a non Tuakiri user - utilise drupal user id
      // This case should not occur in the live portal as tuakiri registration
      // is the only option
      $identifier = 'tuakiri-test-hash-'.$account->uid;
    }
  }

  return $identifier;
}

function nesi_user_tuakiri_attributes() {
  // Tests tuakiri session and returns valid attributes as an array
  // Invalid attributes will be returned as empty strings and reported 
  // to the administrator via watchdog
  // Full list of attributes found here - https://tuakiri.ac.nz/confluence/display/Tuakiri/Attributes
  $attributes = array();

  $attributes['shared-token'] = (!empty($_SERVER['shared-token'])) ? $_SERVER['shared-token'] : "";
  $attributes['displayName'] = (!empty($_SERVER['displayName'])) ? $_SERVER['displayName'] : "";
  $attributes['mail'] = (!empty($_SERVER['mail'])) ? $_SERVER['mail'] : "";
  $attributes['cn'] = (!empty($_SERVER['cn'])) ? $_SERVER['cn'] : "";
  $attributes['givenName'] = (!empty($_SERVER['givenName'])) ? $_SERVER['givenName'] : "";
  $attributes['sn'] = (!empty($_SERVER['sn'])) ? $_SERVER['sn'] : "";
  $attributes['organizationName'] = (!empty($_SERVER['organizationName'])) ? $_SERVER['organizationName'] : "";
  $attributes['o'] = (!empty($_SERVER['o'])) ? $_SERVER['o'] : "";

  return $attributes;
}

function nesi_user_tuakiri_validate() {
  // Checks for a valid tuakiri session
  // Returns true or false based on session data available.

  global $user;
  $account = $user; 

  // User must be logged in so we can identify them within portal
  if ($account->uid > 1) {
    // Check for tuakiri session
    if (!empty($_SERVER['Shib-Identity-Provider'])) {
      return TRUE;
    }
  }

  return FALSE;  
}

function nesi_user_field_access($op, $field, $entity_type, $entity, $account) {
 // disable access to gold_create field
 switch ($field['field_name']){
   case 'field_user_gold_create':
     return FALSE;
   break;
 }
}


/**
 * Implements hook_user_view_alter()
 */
function nesi_user_user_view_alter(&$build) {
  //dpm('* Implements hook_user_view_alter()');
  //dpm($build);
}

/**
 * Implements hook_user_delete()
 */
function nesi_user_user_delete($account) {

  // DELETE disabled currently. 
  // Questions:
  // 1. Will portal be used to manage users (ie. remove them from GOLD?)
  // 2. Should user be able to delete own account?  
}

/**
 * Implements hook_user_login()
 */
function nesi_user_user_login(&$edit, $account) {
  
  // Check user had been created in GOLD
  _gold_user_create($account);
}

function _gold_user_create($account) {
  // Skip if superadmin
  if ($account->uid > 1) {
    // Bootstrap any required user login operations
    $gold_emw = entity_metadata_wrapper('user', $account)->field_user_gold_create;
    $gold_flag = $gold_emw->value();

    // If gold_flag is not set, then attempt to create user in GOLD for the first time...
    if (empty($gold_flag)) {

      /* ***************************************************** */
      /* CREATE OR UPDATE OF USERS IN GOLD                     */
      /* We set user data based on reverse order of authority: */ 
      /* (core -> researcher profile -> tuakiri)               */
      /* ***************************************************** */
      $user_data = array();
      // Set user data based on known attributes
      $user_data['email'] = $account->mail;
      // Set required fields to empty ready for override
      $user_data['firstName'] = "";
      $user_data['lastName'] = "";
      $user_data['institution'] = "";

      // Check for research profile data setup by user
      $profile = profile2_load_by_user($account->uid);
      if (is_object($profile)) {
        $profile_emw = entity_metadata_wrapper('profile2', $profile); 

        $user_data['firstName'] = $account->field_user_firstname->value();
        $user_data['middleName'] = $account->field_user_middlename->value();
        $user_data['lastName'] = $account->field_user_lastname->value();
        $user_data['institution'] = $account->field_user_institution->value();
        $user_data['department'] = $account->field_user_department->value();
        $user_data['position'] = $account->field_user_position->value();
        $user_data['phone'] = $account->field_user_phone->value();
        $user_data['address'] = $account->field_user_address->value();
        $user_data['altEmail'] = $account->field_user_altemail->value();
        $user_data['nationality'] = $account->field_user_nationality->value();
      }

      $rest_user_id = nesi_user_tuakiri_identifier();
      $user_data['userId'] = $rest_user_id;

      // Fetch tuakiri attribute information if it exists
      $tk_attributes = nesi_user_tuakiri_attributes();

      // Override stored data with "current" data supplied by tuakiri
      $user_data['email'] = (!empty($tk_attributes['mail'])) ? $tk_attributes['mail'] : $user_data['email'];
      $user_data['firstName'] = (!empty($tk_attributes['givenName'])) ? $tk_attributes['givenName'] : $user_data['firstName'];
      $user_data['lastName'] = (!empty($tk_attributes['sn'])) ? $tk_attributes['sn'] : $user_data['lastName'];
      $user_data['institution'] = (!empty($tk_attributes['organizationName'])) ? $tk_attributes['organizationName'] : $user_data['institution'];
      // Second attempt to capture organisations using 'o' vs 'organizationName' as attribute
      $user_data['institution'] = (!empty($tk_attributes['o'])) ? $tk_attributes['o'] : $user_data['institution'];
      
      // Attempt to connect to REST and create account
      $rest_result = nesi_rest_insert_user($user_data); 

      // Check for error or http response
      if ($rest_result) {
        watchdog('nesi_user', 'REST user created - UID " '.$rest_user_id.' " ', NULL , WATCHDOG_INFO, $link = NULL);
        // Attempt to update gold_flag
        $gold_emw->set('1');
        // Save changes to user.
        user_save($account);
      }
      else {
        watchdog('nesi_user', 'REST create user failure - UID " '.$rest_user_id.' " ', NULL , WATCHDOG_ERROR, $link = NULL);
        
        // Nothing to do - user creat failed. Attempt to create again later.
        dpm('It appears that there may have been a problem creating the user in GOLD.');
      }
    }
  }
}

