<?php
/**
 * @file
 * Code for the NeSI Team Selector feature.
 */

include_once 'nesi_team_selector.features.inc';


function nesi_team_selector_menu_alter(&$items) {

  // Check access rules

  //dpm('exc'); 
  $items['node/%/team']['access callback'] = '_nesi_team_selector_team_access';
  $items['node/%/team']['access arguments'] = array(1);
  $items['node/%/team/%/remove']['access callback'] = '_nesi_team_selector_team_access';
  $items['node/%/team/%/remove']['access arguments'] = array(1);
  $items['node/%/team/%/remove']['page callback'] = 'nesi_team_selector_unlink_member';
  //$items['node/%/team']['type'] = MENU_LOCAL_TASK;
  //$items['node/%/team']['title'] = 'what';
  //$items['node/%node/team']['access arguments'] = array('view hidden tabs');

}

function _nesi_team_selector_team_access($nid) {
  // Checks to see if a user has access to manage this team..
  global $user;
  //dpm($user); 
  $node = node_load($nid);

  // Check that node is project or proposal
  if (($node->type == 'project') || ($node->type == 'proposal_research_class') || ($node->type == 'proposal_development_class')) {
    
    if ($user->uid > 0) {
      // User owns proposal node?
      if ($node->uid == $user->uid) {
        return TRUE;
      }
    }
  }
  return FALSE;
}

function nesi_team_selector_unlink_member() {

  $page_type = arg(0);
  $delta = arg(1);
  $indicator = arg(2);
  
  //Process
  if (arg(4) == 'remove') {
    // If node
    if (!empty($page_type) && $page_type == 'node') {
      // As well as team indicator
      if (!empty($indicator) && $indicator == 'team') {
        // load object
        $node = node_load($delta); 
        if ($node) {
          // Check types
          if ($node->type == 'project') {
            // No need to load anything - just use project
            $user_check = _nesi_team_selector_uid_search(arg(3), $node->field_p_teamlist[LANGUAGE_NONE]);
            if ($user_check === TRUE) {
              $node->field_p_teamlist[LANGUAGE_NONE] = _nesi_team_selector_uid_remove(arg(3), $node->field_p_teamlist[LANGUAGE_NONE]);
              node_save($node);
            }
          }
          if (($node->type == 'proposal_research_class') || ($node->type == 'proposal_development_class')) {
            // Load pdc project
            $team_node = node_load($node->field_p_project_id[LANGUAGE_NONE][0]);
        
            if ($team_node) {
              $user_check = _nesi_team_selector_uid_search(arg(3), $team_node->field_p_teamlist[LANGUAGE_NONE]);
              if ($user_check === TRUE) {
                $team_node->field_p_teamlist[LANGUAGE_NONE] = _nesi_team_selector_uid_remove(arg(3), $team_node->field_p_teamlist[LANGUAGE_NONE]);
                node_save($team_node);
              }
            }
          }
        }
      }
    }
  }

  drupal_goto($page_type.'/'.$delta.'/'.$indicator);
}

function nesi_team_selector_preprocess_page(&$vars) {
  
  $page_type = arg(0);
  $delta = arg(1);
  $indicator = arg(2);

  // If node
  if (!empty($page_type) && $page_type == 'node') {
    // As well as team indicator
    if (!empty($indicator) && $indicator == 'team') {
      // load object
      $node = node_load($delta); 
      if ($node) {
        // Check types
        if ($node->type == 'project') {
          // No need to load anything - just include project
          $vars['page']['nesi_teamlist'] = render(field_view_field('node', $node, 'field_p_teamlist'));
        }
        if (($node->type == 'proposal_research_class') || ($node->type == 'proposal_development_class')) {
          $team_node = node_load($node->field_p_project_id[LANGUAGE_NONE][0]);
          // Add project data to page
          if ($team_node) {
            $vars['page']['nesi_teamlist'] = render(field_view_field('node', $team_node, 'field_p_teamlist'));
          }
        }
      }
    }
  }
}

/**
 * Implementation of hook_action_info().
 */
function nesi_team_selector_action_info() {

  return array(
    'nesi_team_selector_argument_selector_action' => array(
      'label' => t('Add Researcher to Team'),
      'type' => 'entity',
      'aggregate' => TRUE,
      'configurable' => FALSE,
      'hooks' => array(),
      'parameters' => array('project' => arg()),
    ),
  );
}

/**
* Implementation of a Drupal action.
* Passes selected ids as arguments to a view.
*/
function nesi_team_selector_argument_selector_action($entities, $context = array()) {

  if ($context['project'][0] == 'node') {
    $project = node_load($context['project'][1]);

    if ($project) {
      // Assign user
      foreach ($entities as $researcher) {
        if ($project->type == 'project') {
          // Add check for user already being within the team
          $user_check = _nesi_team_selector_uid_search($researcher->uid, $project->field_p_teamlist[LANGUAGE_NONE]);
          if ($user_check === FALSE) {
            $project->field_p_teamlist[LANGUAGE_NONE][] = array('uid' => $researcher->uid);
            node_save($project);
          }
        }
        // Add ability to add team member against prc and pdc
        if (($project->type == 'proposal_development_class') || ($project->type == 'proposal_research_class')) {
          // Load pdc project
          $team_node = node_load($project->field_p_project_id[LANGUAGE_NONE][0]);
          // Add check for user already being within the team
          $user_check = _nesi_team_selector_uid_search($researcher->uid, $team_node->field_p_teamlist[LANGUAGE_NONE]);
          if ($user_check === FALSE) {
            $team_node->field_p_teamlist[LANGUAGE_NONE][] = array('uid' => $researcher->uid);
            node_save($team_node);
          }
        }
      }        
 
      drupal_goto('node/'.$project->nid.'/team');
    }
  }
  // Not a node... take user home 
  drupal_goto('user');
}

function nesi_team_selector_views_bulk_operations_form_alter(&$form, &$form_state, $vbo) {
  // Form alter placeholder to adjust / simplify the team member form
  //dpm($form);
  $form['select']['#title'] = '';
}

function nesi_team_selector_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'menu_alter') {
    // Move helper_menu_alter() to the end of the list. module_implements()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['nesi_team_selector'];
    unset($implementations['nesi_team_selector']);
    $implementations['nesi_team_selector'] = $group;
  }
}

function _nesi_team_selector_uid_search($user_id, $user_field = array()) {
  $user_exists = FALSE;
  // Returns true if user exists in reference field.
  foreach ($user_field as $team_member) {
    // Check for match
    if ($team_member['uid'] == $user_id) {
      $user_exists = TRUE;
    }
  }
  return $user_exists;
}

function _nesi_team_selector_uid_remove($user_id, $user_field = array()) {
  // Removes a user from reference field.
  foreach ($user_field as $key => $team_member) {
    // Check for match
    if ($team_member['uid'] == $user_id) {
      unset($user_field[$key]);
    }
  }
  return array_values($user_field);
}

