<?php
// $Id$

/**
 * @file
 * Ctools hooks for a multi step form
 */

include_once 'forms/proposal_form_intro.inc';
include_once 'forms/proposal_form_development.inc';
include_once 'forms/proposal_form_research.inc';

/**
 * Implementation of hook init
 */
function nesi_mstep_proposal_init() {
  // Don't cache proposal page for anonymous users!

  // if the path leads to the wizard
  if (drupal_match_path($_GET['q'], 'apply/*')) {
    // set cache to false
    $GLOBALS['conf']['cache'] = FALSE;   
  }
}

/**
 * Implementation of hook_menu()
 */
function nesi_mstep_proposal_menu() {
  $items = array();
  
  $items['apply/%ctools_js/create-proposal'] = array(
    'title' => t('Apply for Access to HPC Facilities'),
    'page callback' => 'nesi_mstep_proposal_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  $items['apply/proposal-complete'] = array(
    'title' => t('Proposal Complete'),
    'page callback' => 'nesi_mstep_proposal_complete',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['apply/email-testing'] = array(
    'title' => t('Email testing'),
    'page callback' => 'nesi_mstep_proposal_email_test_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Page callback for apply/%ctools_js/create-proposal
 */
function nesi_mstep_proposal_page($js = NULL, $step = NULL) {
 
  ctools_include('wizard');
  ctools_include('object-cache');

  if (empty($step)) {
    // We reset the form when $step is NULL because that means they have
    // for whatever reason started over.
    nesi_mstep_proposal_cache_clear('nesi_mstep');
    $step = 'step1';
  }

  // Get form from cache
  $ctools_object = nesi_mstep_proposal_cache_get('nesi_mstep');

  if (empty($ctools_object->form_info)) {
 
    $ctools_object->form_info = array(
      'id' => 'nesi_mstep', //form id
      'path' => "apply/" . ($js ? 'ajax' : 'nojs') . "/create-proposal/%step", //pass the step we're on to the form, step1, step2, ..etc
      'show trail' => FALSE, //show the breadcrumb / path trail for the forms
      'show back' => TRUE, //show the back button
      'show cancel' => FALSE, //show the cancel button
      'show return' => FALSE, //show the update and return button
      'next callback' =>  'nesi_mstep_proposal_wizard_next', //a callback function to run when the next button is pressed
      'finish callback' => 'nesi_mstep_proposal_wizard_finish', //callback when finish button is pressed
      'return callback' => 'nesi_mstep_proposal_wizard_finish', //callback when finish button is pressed
      'cancel callback' => 'nesi_mstep_proposal_wizard_cancel', //callback when cancel button is pressed
      'cancel path' => "apply/" . ($js ? 'ajax' : 'nojs') . "/create-proposal/%step",
      'return path' => "apply/" . ($js ? 'ajax' : 'nojs') . "/create-proposal/%step",
      'finish text' => 'Finish',
      'order' => _nesi_mstep_proposal_steps(),
      'forms' => _nesi_mstep_proposal_forms(), 
    );
  }
  
  $form_state['ctools_object'] = $ctools_object;

  // Send this all off to our form. This is like drupal_get_form only wizardy.
  $ctools_form = ctools_wizard_multistep_form($ctools_object->form_info, $step, $form_state);
  $output = drupal_render($ctools_form);
  
  return $output;
}

/**
 * Returns array of steps (in order of display) for use within the multistep wizard.
 */
function _nesi_mstep_proposal_steps() {
  return array( 
    'step1' => t('Get Started'),
    'step2' => t('Proposal Intro'),
  );
}

function _nesi_mstep_proposal_steps_research_proposal() {
  return array( 
    'step1' => t('Get Started'),
    'step2' => t('Proposal Intro'),
    'step3' => t('Proposal Team'),
    'step4' => t('Completion'),
  );
}

/**
 * Returns array of forms to be utilised by multistep wizard.
 */
function _nesi_mstep_proposal_forms() {
  // Each step relates to a form callback
  return array(     
    'step1' => array( 
      'form id' => 'nesi_mstep_proposal_step_1'
    ),
    'step2' => array(
      'form id' => 'nesi_mstep_proposal_step_2'
    ),
  );
}

function _nesi_mstep_proposal_forms_research_proposal() {
  // These steps are used for Research Proposal workflow

  // Each step relates to a form callback
  return array(     
    'step1' => array( 
      'form id' => 'nesi_mstep_proposal_step_1'
    ),
    'step2' => array(
      'form id' => 'nesi_mstep_proposal_step_2'
    ),
    'step3' => array(
      'form id' => 'nesi_mstep_proposal_step_3'
    ), 
    'step4' => array(
      'form id' => 'nesi_mstep_proposal_step_4'
    ), 
  );
}

/**
 * Returns array of proposal types available for completion.
 */
function nesi_mstep_proposal_class_types() {
  return array(
    'proposal_development_class' => 'Proposal Development',
    'research_proposal_class' => 'Research',
  );
}

/**
 * Returns available cluster platform options for use within proposal forms.
 */
function nesi_mstep_proposal_platform_options() {
  return array(
    'power6' => 'Power 6',
    'power7' => 'Power 7',
    'intel' => 'Intel',
    'bluegene' => 'Bluegene',
    'unspecified' => 'Don\'t know',
  );
}

function nesi_mstep_proposal_complete() {
  
  return array(
    '#markup' => '<div class="nesi-confirmation-left"></div>
                  <div class="nesi-confirmation-center">
                    <div class="nesi-confirmation-center-top"></div>
                    <div class="nesi-confirmation-center-inner">
                      <h1>Thank you</h1>
                      <h2>Your Proposal Development submission has been placed and will now go into the review stage.</h2>
                      <p>A copy of the Access Policy will be in your email inbox.<br />You will receive a confirmation email shortly.</p>
                    </div>
                    <div class="nesi-confirmation-center-bottom"></div>
                  </div>
                  <div class="nesi-confirmation-right"></div>',
  );
}

function nesi_mstep_proposal_step_1($form, &$form_state) {
  $form_state['title'] = t('Apply for Access to HPC Facilities');
   
  $form['intro'] = nesi_mstep_proposal_intro_form(); 

  $form['buttons']['next']['#value'] = 'Start';  

  return $form;
}

function nesi_mstep_proposal_step_2($form, &$form_state) {
  
  $proposal_selection = $form_state['ctools_object']->data['proposal-type'];

  if ($proposal_selection == 'proposal_development_class') {
    $form['pdc'] = nesi_mstep_proposal_development_form();
  }
 
  if ($proposal_selection == 'research_proposal_class') {
    $form['prc'] = nesi_mstep_proposal_research_form($form_state);
  }
  
  return $form;
}

function nesi_mstep_proposal_step_3($form, &$form_state) {
 
  $proposal_selection = $form_state['ctools_object']->data['proposal-type'];

  if ($proposal_selection == 'research_proposal_class') {
    $form['prc'] = nesi_mstep_proposal_research_form_part_2($form_state);
  }
 
  return $form;
}

function nesi_mstep_proposal_step_4($form, &$form_state) {
 
  $proposal_selection = $form_state['ctools_object']->data['proposal-type'];

  if ($proposal_selection == 'research_proposal_class') {
    $form['prc'] = nesi_mstep_proposal_research_form_part_3();
  }
  
  return $form;
}

function nesi_mstep_proposal_step_1_validate($form, &$form_state) {

}

function nesi_mstep_proposal_step_2_validate($form, &$form_state) {

  if ($form_state['clicked_button']['#next'] != $form_state['next']) {
    drupal_get_messages('error');
    form_set_error(NULL, '', TRUE);
    nesi_mstep_proposal_wizard_cancel($form_state);
    return;
  }

  if(form_get_errors()) {
    return;
  }  
}

function nesi_mstep_proposal_step_1_submit($form, &$form_state) {

  $form_state['ctools_object']->data['proposal-type'] = $form_state['values']['proposal-type'];

  // Collect extra steps for research proposal
  if ($form_state['ctools_object']->data['proposal-type'] == 'research_proposal_class') {
    $form_state['ctools_object']->form_info['order'] = _nesi_mstep_proposal_steps_research_proposal();
    $form_state['ctools_object']->form_info['forms'] = _nesi_mstep_proposal_forms_research_proposal(); 
  }
}

function nesi_mstep_proposal_step_2_submit($form, &$form_state) {
  $form_state['ctools_object']->data['p1'] = $form_state['values'];
  dpm ($form_state);
}

function nesi_mstep_proposal_step_3_submit($form, &$form_state) {
  $form_state['ctools_object']->data['p2'] = $form_state['values'];
  dpm ($form_state);
}

/**
 * Next callback
 */
function nesi_mstep_proposal_wizard_next(&$form_state) {
  nesi_mstep_proposal_cache_set('nesi_mstep', $form_state['ctools_object']);
}

function nesi_mstep_proposal_wizard_finish(&$form_state) {
  $form_state['complete'] = TRUE;
 

  // Notify submitter via email
  include_once 'includes/attachment_email/attachment_email.php';

  $to      = $form_state['ctools_object']->data['sub-email'];
  $from    = variable_get('destination_email', '');
  $subject = variable_get('submission_subject', '');
  $message = variable_get('submission_message', '');
  
  //Send Email!
  $email = new AttachmentEmail($to, $from, $subject, $message);
  
  // Watchdog any errors
  if(!$email->send()) {
    watchdog('nesi_mstep_proposal', 'Problem sending confirmation email - " '.$to.' " ', NULL , WATCHDOG_WARNING, $link = NULL);
  } 
  else {
    watchdog('nesi_mstep_proposal', 'Confirmation email sent - " '.$to.' " ', NULL , WATCHDOG_INFO, $link = NULL);
  } 

  // Clear the form data cache from the session

  // Send user to confirmation page
  drupal_goto('apply/proposal-complete');
}

/**
 *
 */
function nesi_mstep_proposal_email() {

  // Notify submitter via email
  include_once 'includes/attachment_email/attachment_email.php';

  //$to      = $form_state['ctools_object']->data['sub-email'];
  $to      = 'sam+nesitesting@webscope.co.nz'; 
  $from    = variable_get('destination_email', '');
  $subject = variable_get('submission_subject', '');
  $message = variable_get('submission_message', '');

    $file = file_load($fid);
    if(FALSE === $file) continue;
    $attachment = array(
      'name' => $file->filename, 
      'path' => drupal_realpath($file->uri), 
      'type' => file_get_mimetype($file->uri), 
    );
    $attachments[] = $attachment;

  //Send Email!
  $email = new AttachmentEmail($to, $from, $subject, $message);
  
  // Watchdog any errors
  if(!$email->send()) {
    watchdog('nesi_mstep_proposal', 'Problem sending confirmation email - " '.$to.' " ', NULL , WATCHDOG_WARNING, $link = NULL);
  } 
  else {
    watchdog('nesi_mstep_proposal', 'Confirmation email sent - " '.$to.' " ', NULL , WATCHDOG_INFO, $link = NULL);
  } 


}

/**
 * Testing page to call email function when building
 */
function nesi_mstep_proposal_email_test_page() {
  
  nesi_mstep_proposal_email();
  return "Email testing page";
}


function nesi_mstep_proposal_wizard_cancel(&$form_state) {
  nesi_mstep_proposal_cache_clear('nesi_mstep');
  $form_state['cancel'] = TRUE;
  drupal_goto('apply/nojs/create-proposal');
}

/**
 * Cache helpers
 */
function nesi_mstep_proposal_cache_set($name, $data) {
  ctools_include('object-cache');
  $cache = ctools_object_cache_set('nesi_mstep_proposal', $name, $data);
}

/**
 * Get the current object from the cache, or default.
 */
function nesi_mstep_proposal_cache_get($name) {
  ctools_include('object-cache');

  $cache = ctools_object_cache_get('nesi_mstep_proposal', $name);
  if (!$cache) {
    $cache = new stdClass();
    $cache->locked = ctools_object_cache_test('nesi_mstep_proposal', $name);
  }
  return $cache;
}

/**
 * Clear the wizard cache.
 */
function nesi_mstep_proposal_cache_clear($name) {
  ctools_include('object-cache');
  ctools_object_cache_clear('nesi_mstep_proposal', $name);
}

function nesi_mstep_proposal_theme($existing, $type, $theme, $path) {

  $variables = array();

  return array(
    'nesi_mstep_proposal_step' => array(
      'variables' => $variables,
      'template' => 'nesi-mstep-proposal-step',
      'path' => drupal_get_path('module', 'nesi_mstep_proposal') .'/templates'
    ),
    'nesi_mstep_proposal_wrapper' => array(
      'variables' => array('content' => NULL),
      'template' => 'nesi-mstep-proposal-wrapper',
      'path' => drupal_get_path('module', 'nesi_mstep_proposal') .'/templates'
    )
  ); 
}

